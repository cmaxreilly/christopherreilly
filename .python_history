_HiStOrY_V2_
exit
exit()
pip
exit()
jupyter\040notebook
exit()
help
exit()
import\040live
import\040random
set\040=\040live.Set()
import\040live
set\040=\040live.Set
set
exit()
help
help()
math
quit()
quit
1\040+\0401
+\040100
1\040+\0401\040+\0401
60/400
60/400\040+\040500
percentage
percent
1000000000000+\0401000000000000
quit
quit()
edali
exit
exit()
1550/25
62*15
1000/62
1000/15
pip
exit()
running_times\040=\040(10,\0403,\0405,\04030,\0405,\0405,\0403,\04017,\0403)\040
print(sum(running_times))
exit()
list(range(0,\04011))
list(range(0,\04012))
number_list\040=\040list(range(0,\04012))
tone_row\040=\040[]
for\040number\040in\040number_list:
tone_row.append(number)
my_test_list\040=\040[1,\0402,\0403]
print\040my_test_list
print(my_test_list)
my_test_list.reverse
print(my_test_list)
reverse\040=\040my_test_list.reverse
print(reverse)
list.reverse(my_test_list)
print(my_test_list)
exit()
pip
exit()
print()
/usr/local/bin/python3 /Users/christopherreilly/Documents/the_vault/Code/tone_row_maximalism/dicking_the_command_line.py
exit()
total=1000
grades = (100, 150, 150, 100, 100, 100, 50)
sum(grades)
1500/1900
exit()
6 * 12 * 5 * 3
1080/5
cf = 6
cf
keys = 12
keys
species = 5
voicings = 9
keys * cf * species * voicings
3240/5
648/365
648/30
exit()
def maps_of_meaning_selector(range):
ls
exit()
22344 + 30288 + 33493 + 30093 + 30093 + 30093 + 30093 + 30093
total_cost = 236590
total_cost
total_cost.type
total_cost.type()
type(total_cost)
exit()
4500 * 58.85
exit()
Miranda = 100 + 80 + 50 + 100 + 80 + 60 + 100 + 70 + 60 + 100 + 80
print Miranda
print(Miranda)
exit()
total = 400 + 184.70 + 92.35 + 221.82
deposit = total * .2
print deposit
print(deposit)
exit()
exit
exit()
